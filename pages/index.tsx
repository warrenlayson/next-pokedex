import axios, { AxiosError } from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { useQuery } from 'react-query';
import Navbar from '../components/Navbar';
import PokemanCard from '../components/PokemanCard';
import { GetPokemonsResponse, Pokemon } from '../types';

const getPokemon = (offset: number | null): Promise<Pokemon[]> =>
  axios
    .get<GetPokemonsResponse>('https://pokeapi.co/api/v2/pokemon', {
      params: {
        limit: 150,
        offset,
      },
    })
    .then((res) =>
      res.data.results.map((data, idx) => {
        const id = idx + 1;
        return {
          name: data.name,
          id,
          image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`,
        };
      })
    );

function usePokemon(limit: number | null) {
  return useQuery(['pokemon', limit], () => getPokemon(limit), {
    keepPreviousData: true,
  });
}

const Home: NextPage = () => {
  const [text, setText] = useState('');

  const [offset, setOffset] = useState<number | null>(null);

  const { isLoading, isError, error, data, isFetching, isPreviousData } =
    usePokemon(offset);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setText(e.target.value);
  };

  return (
    <div className="container max-w-6xl py-8 mx-auto">
      <Head>
        <title>Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <main>
        <h1 className="my-8 text-4xl text-center uppercase">Next Pokedex</h1>

        <input
          type="text"
          className="w-full p-4 text-lg border-2 border-gray-200 rounded-md"
          placeholder="Search Pokemon"
          value={text}
          onChange={handleChange}
        />

        {/* Pokemon grid */}
        <div>
          {isLoading ? (
            <div>Loading...</div>
          ) : isError ? (
            <div>Error: {(error as AxiosError).message}</div>
          ) : (
            <div className="grid grid-cols-1 gap-4 py-4 md:grid-cols-2 lg:grid-cols-3">
              {data?.map((pokeman) => (
                <PokemanCard pokeman={pokeman} key={pokeman.id} />
              ))}
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
